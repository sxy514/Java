第一章、概述
    本章先从计算机系统层次结构出发，定义什么是计算机系统结构、计算机组成和计算机实现，以及它们的内涵和相互关系。在讨论计算机系统软、硬件功能取舍的原则后，简要讲述计算机系统的定量设计原理、计算机系统设计的主要任务和方法。
    然后讲述软件、应用、器件的发展对系统结构的影响。最后介绍计算机系统结构的并行性开发和计算机系统的分类，以便为后续各章具体讨论系统结构和组成的内容打下基础。
    1.1 计算机系统的层次结构
        从使用语言的角度，一台由软、硬件组成的通用计算机系统可以被看成是按功能划分的多层机器级组成的层次结构。层级结构由高到低依次为应用语言机器级、高级语言机器级、汇编语言机器级、操作系统机器级、传统机器语言机器级和微程序机器级，如下所示。
        具体的计算机系统，其层次数的多少可以有所不同。

            第5级虚拟机器       应用语言机器M5具有L5机器语言(应用语言)          <------ 应用语言程序经应用程序包翻译成高级语言程序

            第4级虚拟机器       高级语言机器M4具有L4机器语言(高级语言)          <------ 高级语言程序经编译程序翻译成汇编语言程序(或是某种中间语言程序，或是机器语言程序)

            第3级虚拟机器       汇编语言机器M3具有L3机器语言(汇编语言)          <------ 汇编语言程序经汇编程序翻译成机器语言程序

            第2级虚拟机器       操作系统机器M2具有L2机器语言(作业控制语言等)    <------ 一般用机器语言程序解释作业控制语句等

            第1级实际机器       传统机器语言机器M1具有L1机器语言(机器指令系统)  <------ 用微指令程序解释机器指令
            
            第0级实际机器       微程序机器M0具有L0机器语言(微指令系统)          <------ 微指令由硬件直接执行

        对使用某一级语言编程的程序员来讲，只要熟悉和遵守该级语言的使用规定，所编程序就总能在此机器上运行并得到结果，而不用考虑这个机器级是如何实现的。就好像该程序源有了一台可以直接使用这种语言作为机器语言的机器一样。这里，"机器"被定义为能存储和执行相应语言程序的算法和数据结构的集合体。
        实际上，只有二进制机器指令，即传统所讲的机器语言与机器硬件直接对应，方可直接被硬件识别和执行。
        各机器级的实现采用翻译技术或解释技术，或者是这两种技术的集合。翻译(Translation)技术是先用转换程序将高一级机器级上的程序整个地变换成低一级机器级上等效的程序，然后在低一级机器级上实现的技术。
        解释(Interpretation)技术则是在低级机器级上用它的一串语句或指令来仿真高级机器级上的一条语句或指令的功能，是通过对高级机器级语言程序中的每条语句或指令逐条解释来实现的技术。
        
